(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{304:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2-基础类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-基础类型"}},[t._v("#")]),t._v(" 2. 基础类型")]),t._v(" "),a("h2",{attrs:{id:"_2-1-命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-命名"}},[t._v("#")]),t._v(" 2.1 命名")]),t._v(" "),a("p",[t._v("Go 语言中的函数名、变量名、常量名、类型名、语句标号和包名等所有的命名，都遵循一个简单的命名规则：一个名字必须以一个字母（Unicode 字母）或下划线开头，后面可以跟任意数量的字母、数字或下划线。大写字母和小写字母是不同的：heapSort 和 Heapsort 是两个不同的名字。")]),t._v(" "),a("p",[t._v("Go 语言中类似 if 和 switch 的关键字有 25 个(均为小写)。关键字不能用于自定义名字，只能在特定语法结构中使用。\nbreak       default        func         interface        select\ncase        defer         go        map      struct\nchan        else         goto     package   switch\nconst   fallthrough if     range        type\ncontinue   for     import     return    var")]),t._v(" "),a("p",[t._v("此外，还有大约 30 多个预定义的名字，比如 int 和 true 等，主要对应内建的常量、类型和函数。\n内建常量:\ntrue false iota nil\n内建类型:\n     int int8 int16 int32 int64\n     uint uint8 uint16 uint32 uint64 uintptr\n     float32 float64 complex128 complex64\n     bool byte rune string error\n内建函数:\n     make len cap new append copy close delete\n     complex real imag\n     panic recover")]),t._v(" "),a("h2",{attrs:{id:"_2-2-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-变量"}},[t._v("#")]),t._v(" 2.2 变量")]),t._v(" "),a("p",[t._v("变量是几乎所有编程语言中最基本的组成元素，变量是程序运行期间可以改变的量。")]),t._v(" "),a("p",[t._v("从根本上说，变量相当于是对一块数据存储空间的命名，程序可以通过定义一个变量来申请一块数据存储空间，之后可以通过引用变量名来使用这块存储空间。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-1-变量声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-变量声明"}},[t._v("#")]),t._v(" 2.2.1 变量声明")]),t._v(" "),a("p",[t._v("Go 语言的变量声明方式与 C 和 C++语言有明显的不同。对于纯粹的变量声明， Go 语言引入了关键字 var，而类型信息放在变量名之后，示例如下：")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v2 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一次定义多个变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v4 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        v5 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n        v6 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-2-变量初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-变量初始化"}},[t._v("#")]),t._v(" 2.2.2 变量初始化")]),t._v(" "),a("p",[t._v("对于声明变量时需要进行初始化的场景， var 关键字可以保留，但不再是必要的元素，如下所示：")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式2，编译器自动推导出v2的类型")]),t._v("\n    v3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式3，编译器自动推导出v3的类型")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v3 type is "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//v3 type is  int")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//出现在 := 左侧的变量不应该是已经被声明过，:=定义时必须初始化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v4 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    v4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//err")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-3-变量赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-变量赋值"}},[t._v("#")]),t._v(" 2.2.3 变量赋值")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    v1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v4 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//多重赋值")]),t._v("\n\n    i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n    i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//多重赋值")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-4-匿名变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-匿名变量"}},[t._v("#")]),t._v(" 2.2.4 匿名变量")]),t._v(" "),a("p",[t._v("_（下划线）是个特殊的变量名，任何赋予它的值都会被丢弃：")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sb"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-3-常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-常量"}},[t._v("#")]),t._v(" 2.3 常量")]),t._v(" "),a("p",[t._v("在 Go 语言中，常量是指编译期间就已知且不可改变的值。常量可以是数值类型（包括整型、浮点型和复数类型）、布尔类型、字符串类型等。")]),t._v(" "),a("h3",{attrs:{id:"_2-3-1-字面常量-常量值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-字面常量-常量值"}},[t._v("#")]),t._v(" 2.3.1 字面常量(常量值)")]),t._v(" "),a("p",[t._v('所谓字面常量（literal），是指程序中硬编码的常量，如：\n123\n3.1415 // 浮点类型的常量\n3.2+12i // 复数类型的常量\ntrue // 布尔类型的常量\n"foo" // 字符串常量')]),t._v(" "),a("h3",{attrs:{id:"_2-3-2-常量定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-常量定义"}},[t._v("#")]),t._v(" 2.3.2 常量定义")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Pi "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zero "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浮点常量, 自动推导类型")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常量组")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v("\n        eof        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整型常量, 自动推导类型")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// u = 0.0, v = 3.0，常量的多重赋值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// a = 3, b = 4, c = "foo"    //err, 常量不能修改')]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-3-3-iota-枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-iota-枚举"}},[t._v("#")]),t._v(" 2.3.3 iota 枚举")]),t._v(" "),a("p",[t._v("常量声明可以使用 iota 常量生成器初始化，它用于生成一组以相似规则初始化的常量，但是不用每行都写一遍初始化表达式。")]),t._v(" "),a("p",[t._v("在一个 const 声明语句中，在第一个声明的常量所在的行，iota 将会被置为 0，然后在每一个有常量声明的行加一。")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x == 0")]),t._v("\n        y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// y == 1")]),t._v("\n        z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// z == 2")]),t._v("\n        w  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 这里隐式地说w = iota，因此w == 3。其实上面y和z可同样不用"= iota"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每遇到一个const关键字，iota就会重置，此时v == 0")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//h=0,i=0,j=0 iota在同一行值相同")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        a       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a=0")]),t._v("\n        b       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),t._v("\n        c       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//c=2")]),t._v("\n        d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//d=3,e=3,f=3")]),t._v("\n        g       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//g = 4")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        x1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x1 == 0")]),t._v("\n        y1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// y1 == 10")]),t._v("\n        z1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// z1 == 20")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-4-基础数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-基础数据类型"}},[t._v("#")]),t._v(" 2.4 基础数据类型")]),t._v(" "),a("h3",{attrs:{id:"_2-4-1-分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-分类"}},[t._v("#")]),t._v(" 2.4.1 分类")]),t._v(" "),a("p",[t._v("Go 语言内置以下这些基础类型：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("长度")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("零值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),a("td",[t._v("其值不为真即为家，不可以用数字代表 true 或 false")])]),t._v(" "),a("tr",[a("td",[t._v("byte")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字节型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",[t._v("uint8 别名")])]),t._v(" "),a("tr",[a("td",[t._v("rune")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",[t._v("专用于存储 unicode 编码，等价于 uint32")])]),t._v(" "),a("tr",[a("td",[t._v("int, uint")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4 或 8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",[t._v("32 位或 64 位")])]),t._v(" "),a("tr",[a("td",[t._v("int8, uint8")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",[t._v("-128 ~ 127, 0 ~ 255")])]),t._v(" "),a("tr",[a("td",[t._v("int16, uint16")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",[t._v("-32768 ~ 32767, 0 ~ 65535")])]),t._v(" "),a("tr",[a("td",[t._v("int32, uint32")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",[t._v("-21 亿 ~ 21 亿, 0 ~ 42 亿")])]),t._v(" "),a("tr",[a("td",[t._v("int64, uint64")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("float32")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.0")]),t._v(" "),a("td",[t._v("小数位精确到 7 位")])]),t._v(" "),a("tr",[a("td",[t._v("float64")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.0")]),t._v(" "),a("td",[t._v("小数位精确到 15 位")])]),t._v(" "),a("tr",[a("td",[t._v("complex64")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("复数类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("complex128")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("复数类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("uintptr")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4 或 8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",[t._v("⾜以存储指针的 uint32 或 uint64 整数")])]),t._v(" "),a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('""')]),t._v(" "),a("td",[t._v("utf-8 字符串")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-4-2-布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-布尔类型"}},[t._v("#")]),t._v(" 2.4.2 布尔类型")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\nv1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nv2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v2也会被推导为bool类型")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//布尔类型不能接受其他类型的赋值，不支持自动或强制的类型转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// err, 编译错误")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// err, 编译错误")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-3-整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-3-整型"}},[t._v("#")]),t._v(" 2.4.3 整型")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n    v1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n    v2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v1将会被自动推导为int类型")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-4-浮点型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-4-浮点型"}},[t._v("#")]),t._v(" 2.4.4 浮点型")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v("\n    f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n    f2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不加小数点， fvalue2会被推导为整型而不是浮点型，float64")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-5-字符类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-5-字符类型"}},[t._v("#")]),t._v(" 2.4.5 字符类型")]),t._v(" "),a("p",[t._v("在 Go 语言中支持两个字符类型，一个是 byte（实际上是 uint8 的别名），代表 utf-8 字符串的单个字节的值；另一个是 rune，代表单个 unicode 字符。")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ch1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch3 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("\n    ch1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符赋值")]),t._v("\n    ch2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符的ascii码赋值")]),t._v("\n    ch3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转义字符")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ch1 = %c, ch2 = %c, %c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-6-字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-6-字符串"}},[t._v("#")]),t._v(" 2.4.6 字符串")]),t._v(" "),a("p",[t._v("在 Go 语言中，字符串也是一种基本类型：")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("                                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个字符串变量")]),t._v("\n    str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v("                                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串赋值")]),t._v("\n    ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取字符串的第一个字符")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str = %s, len = %d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内置的函数len()来取字符串的长度")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str[0] = %c, ch = %c\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//`(反引号)括起的字符串为Raw字符串，即字符串在代码中的形式就是打印时的形式，它没有字符转义，换行也将原样输出。")]),t._v("\n    str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`hello\n    mike \\n \\r测试\n    `")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str2 = "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n        str2 =  hello\n              mike \\n \\r测试\n    */")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-7-复数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-7-复数类型"}},[t._v("#")]),t._v(" 2.4.7 复数类型")]),t._v(" "),a("p",[t._v("复数实际上由两个实数（在计算机中用浮点数表示）构成，一个表示实部（real），一个表示虚部（imag）。")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由2个float32构成的复数类型")]),t._v("\n    v1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12i")]),t._v("\n    v2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12i")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v2是complex128类型")]),t._v("\n    v3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v3结果同v2")]),t._v("\n\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内置函数real(v1)获得该复数的实部")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过imag(v1)获得该复数的虚部")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("real")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("imag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-5-fmt-包的格式化输出输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-fmt-包的格式化输出输入"}},[t._v("#")]),t._v(" 2.5 fmt 包的格式化输出输入")]),t._v(" "),a("h3",{attrs:{id:"_2-5-1-格式说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-格式说明"}},[t._v("#")]),t._v(" 2.5.1 格式说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("格式")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("%%")]),t._v(" "),a("td",[t._v("一个%字面量")])]),t._v(" "),a("tr",[a("td",[t._v("%b")]),t._v(" "),a("td",[t._v("一个二进制整数值(基数为 2)，或者是一个(高级的)用科学计数法表示的指数为 2 的浮点数")])]),t._v(" "),a("tr",[a("td",[t._v("%c")]),t._v(" "),a("td",[t._v("字符型。可以把输入的数字按照 ASCII 码相应转换为对应的字符")])]),t._v(" "),a("tr",[a("td",[t._v("%d")]),t._v(" "),a("td",[t._v("一个十进制数值(基数为 10)")])]),t._v(" "),a("tr",[a("td",[t._v("%e")]),t._v(" "),a("td",[t._v("以科学记数法 e 表示的浮点数或者复数值")])]),t._v(" "),a("tr",[a("td",[t._v("%E")]),t._v(" "),a("td",[t._v("以科学记数法 E 表示的浮点数或者复数值")])]),t._v(" "),a("tr",[a("td",[t._v("%f")]),t._v(" "),a("td",[t._v("以标准记数法表示的浮点数或者复数值")])]),t._v(" "),a("tr",[a("td",[t._v("%g")]),t._v(" "),a("td",[t._v("以%e 或者%f 表示的浮点数或者复数，任何一个都以最为紧凑的方式输出")])]),t._v(" "),a("tr",[a("td",[t._v("%G")]),t._v(" "),a("td",[t._v("以%E 或者%f 表示的浮点数或者复数，任何一个都以最为紧凑的方式输出")])]),t._v(" "),a("tr",[a("td",[t._v("%o")]),t._v(" "),a("td",[t._v("一个以八进制表示的数字(基数为 8)")])]),t._v(" "),a("tr",[a("td",[t._v("%p")]),t._v(" "),a("td",[t._v("以十六进制(基数为 16)表示的一个值的地址，前缀为 0x,字母使用小写的 a-f 表示")])]),t._v(" "),a("tr",[a("td",[t._v("%q")]),t._v(" "),a("td",[t._v("使用 Go 语法以及必须时使用转义，以双引号括起来的字符串或者字节切片[]byte，或者是以单引号括起来的数字")])]),t._v(" "),a("tr",[a("td",[t._v("%s")]),t._v(" "),a("td",[t._v("字符串。输出字符串中的字符直至字符串中的空字符（字符串以'\\0‘结尾，这个'\\0'即空字符）")])]),t._v(" "),a("tr",[a("td",[t._v("%t")]),t._v(" "),a("td",[t._v("以 true 或者 false 输出的布尔值")])]),t._v(" "),a("tr",[a("td",[t._v("%T")]),t._v(" "),a("td",[t._v("使用 Go 语法输出的值的类型")])]),t._v(" "),a("tr",[a("td",[t._v("%U")]),t._v(" "),a("td",[t._v("一个用 Unicode 表示法表示的整型码点，默认值为 4 个数字字符")])]),t._v(" "),a("tr",[a("td",[t._v("%v")]),t._v(" "),a("td",[t._v("使用默认格式输出的内置或者自定义类型的值，或者是使用其类型的 String()方式输出的自定义值，如果该方法存在的话")])]),t._v(" "),a("tr",[a("td",[t._v("%x")]),t._v(" "),a("td",[t._v("以十六进制表示的整型值(基数为十六)，数字 a-f 使用小写表示")])]),t._v(" "),a("tr",[a("td",[t._v("%X")]),t._v(" "),a("td",[t._v("以十六进制表示的整型值(基数为十六)，数字 A-F 使用小写表示")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-5-2-输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-输出"}},[t._v("#")]),t._v(" 2.5.2 输出")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//整型")]),t._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a = %b\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a = 1111")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%%\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只输出一个%")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符")]),t._v("\n    ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ch = %c, %c\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a, a")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//浮点型")]),t._v("\n    f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f = %f, %g\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//f = 3.140000, 3.14")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f type = %T\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//f type = float64")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复数类型")]),t._v("\n    v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v = %f, %g\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//v = (3.200000+12.000000i), (3.2+12i)")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v type = %T\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//v type = complex128")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//布尔类型")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%t, %t\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true, false")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串")]),t._v("\n    str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello go"')]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str = %s\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//str = hello go")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-5-3-输人"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-3-输人"}},[t._v("#")]),t._v(" 2.5.3 输人")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入一个整型："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//fmt.Scan(&v)")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v = "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-6-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-类型转换"}},[t._v("#")]),t._v(" 2.6 类型转换")]),t._v(" "),a("p",[t._v("Go 语言中不允许隐式转换，所有类型转换必须显式声明，而且转换只能发生在两种相互兼容的类型之间。")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ch "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var a int = ch //err, cannot use ch (type byte) as type int in assignment")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-7-类型别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-类型别名"}},[t._v("#")]),t._v(" 2.7 类型别名")]),t._v(" "),a("div",{staticClass:"language-Go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" bigint "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//int64类型改名为bigint")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x bigint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        myint "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//int改名为myint")]),t._v("\n        mystr "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string改名为mystr")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);